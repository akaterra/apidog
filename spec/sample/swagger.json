{
  "apiVersion": "1.0.0",
  "swaggerVersion": "1.2",
  "basePath": "http://test/api",
  "resourcePath": "/resource",
  "produces": [
    "application/json"
  ],
  "authorizations": {},
  "apis": [
    {
      "path": "/resource/{resourceId}/deprecated",
      "operations": [
        {
          "method": "GET",
          "summary": "Find resource by id",
          "notes": "Find resource by id description",
          "type": "Resource",
          "nickname": "getResourceById",
          "authorizations": {},
          "parameters": [
            {
              "name": "resourceId",
              "description": "id of resource",
              "required": true,
              "type": "string",
              "paramType": "path"
            }
          ],
          "responseMessages": [
            {
              "code": 400,
              "message": "Invalid id supplied"
            },
            {
              "code": 404,
              "message": "Resource not found"
            }
          ],
          "deprecated": true
        }
      ]
    },
    {
      "path": "/resource/{resourceId}",
      "operations": [
        {
          "method": "GET",
          "summary": "Find resource by id",
          "notes": "Find resource by id description",
          "type": "Resource",
          "nickname": "getResourceById",
          "authorizations": {},
          "parameters": [
            {
              "name": "resourceId",
              "description": "id of resource",
              "required": true,
              "type": "string",
              "paramType": "path"
            }
          ],
          "responseMessages": [
            {
              "code": 400,
              "message": "Invalid id supplied"
            },
            {
              "code": 404,
              "message": "Resource not found"
            }
          ]
        },
        {
          "method": "DELETE",
          "summary": "Delete resource by id",
          "notes": "Delete resource by id description",
          "type": "void",
          "nickname": "deleteResource",
          "authorizations": {
            "oauth2": [
              {
                "scope": "test:anything",
                "description": "anything"
              }
            ]
          },
          "parameters": [
            {
              "name": "resourceId",
              "description": "id of resource",
              "required": true,
              "type": "string",
              "paramType": "path"
            }
          ],
          "responseMessages": [
            {
              "code": 400,
              "message": "Invalid id supplied"
            },
            {
              "code": 404,
              "message": "Resource not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/resource",
      "operations": [
        {
          "method": "POST",
          "summary": "Create resource",
          "notes": "",
          "type": "void",
          "nickname": "createResource",
          "authorizations": {
            "oauth2": [
              {
                "scope": "test:anything",
                "description": "anything"
              }
            ]
          },
          "parameters": [
            {
              "name": "body",
              "description": "Resource data",
              "required": true,
              "type": "Resource",
              "paramType": "body"
            }
          ],
          "responseMessages": [
            {
              "code": 400,
              "message": "Invalid resource"
            }
          ]
        }
      ]
    }
  ],
  "models": {
    "Resource": {
      "id": "Resource",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "field1": {
          "type": "integer",
          "format": "int64"
        },
        "field2": {
          "type": "integer",
          "format": "int32"
        },
        "field3": {
          "type": "string",
          "description": "Resource status",
          "enum": [
            "a",
            " b",
            " c"
          ]
        },
        "field4": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
  }
}